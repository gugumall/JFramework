// Tie class generated by rmic, do not edit.
// Contents subject to change without notice.

package j.service.router;

import j.app.webserver.JSession;
import j.service.server.ServiceBase;
import java.io.Serializable;
import java.rmi.Remote;
import java.rmi.RemoteException;
import javax.rmi.CORBA.Tie;
import javax.rmi.CORBA.Util;
import javax.rmi.PortableRemoteObject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.omg.CORBA.BAD_OPERATION;
import org.omg.CORBA.ORB;
import org.omg.CORBA.SystemException;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.OutputStream;
import org.omg.CORBA.portable.ResponseHandler;
import org.omg.CORBA.portable.UnknownException;
import org.omg.PortableServer.Servant;


public class _JRouterAbstract_Tie extends Servant implements Tie {
    
    volatile private JRouterAbstract target = null;
    
    private static final String[] _type_ids = {
        "RMI:j.service.router.JRouter:0000000000000000"
    };
    
    public void setTarget(Remote target) {
        this.target = (JRouterAbstract) target;
    }
    
    public Remote getTarget() {
        return target;
    }
    
    public org.omg.CORBA.Object thisObject() {
        return _this_object();
    }
    
    public void deactivate() {
        try{
        _poa().deactivate_object(_poa().servant_to_id(this));
        }catch (org.omg.PortableServer.POAPackage.WrongPolicy exception){
        
        }catch (org.omg.PortableServer.POAPackage.ObjectNotActive exception){
        
        }catch (org.omg.PortableServer.POAPackage.ServantNotActive exception){
        
        }
    }
    
    public ORB orb() {
        return _orb();
    }
    
    public void orb(ORB orb) {
        try {
            ((org.omg.CORBA_2_3.ORB)orb).set_delegate(this);
        }
        catch(ClassCastException e) {
            throw new org.omg.CORBA.BAD_PARAM
                ("POA Servant requires an instance of org.omg.CORBA_2_3.ORB");
        }
    }
    
    public String[] _all_interfaces(org.omg.PortableServer.POA poa, byte[] objectId){
        return (String[]) _type_ids.clone();
    }
    
    public OutputStream  _invoke(String method, InputStream _in, ResponseHandler reply) throws SystemException {
        try {
            JRouterAbstract target = this.target;
            if (target == null) {
                throw new java.io.IOException();
            }
            org.omg.CORBA_2_3.portable.InputStream in = 
                (org.omg.CORBA_2_3.portable.InputStream) _in;
            switch (method.length()) {
                case 7: 
                    if (method.equals("startup")) {
                        target.startup();
                        OutputStream out = reply.createReply();
                        return out;
                    }
                case 8: 
                    if (method.equals("shutdown")) {
                        target.shutdown();
                        OutputStream out = reply.createReply();
                        return out;
                    }
                case 11: 
                    if (method.equals("heartbeat__")) {
                        String result = target.heartbeat();
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value(result,String.class);
                        return out;
                    }
                case 17: 
                    if (method.equals("_get_routerConfig")) {
                        RouterConfig result = target.getRouterConfig();
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value(result,RouterConfig.class);
                        return out;
                    } else if (method.equals("_set_routerConfig")) {
                        RouterConfig arg0 = (RouterConfig) in.read_value(RouterConfig.class);
                        target.setRouterConfig(arg0);
                        OutputStream out = reply.createReply();
                        return out;
                    }
                case 67: 
                    if (method.equals("service__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue")) {
                        String arg0 = (String) in.read_value(String.class);
                        String arg1 = (String) in.read_value(String.class);
                        String arg2 = (String) in.read_value(String.class);
                        ServiceBase result = target.service(arg0, arg1, arg2);
                        OutputStream out = reply.createReply();
                        Util.writeRemoteObject(out,result);
                        return out;
                    }
                case 86: 
                    if (method.equals("getAllServiceNodeAvailable__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue")) {
                        String arg0 = (String) in.read_value(String.class);
                        String arg1 = (String) in.read_value(String.class);
                        String arg2 = (String) in.read_value(String.class);
                        ServiceBase[] result = target.getAllServiceNodeAvailable(arg0, arg1, arg2);
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value(cast_array(result),ServiceBase[].class);
                        return out;
                    }
                case 90: 
                    if (method.equals("unregister__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue")) {
                        String arg0 = (String) in.read_value(String.class);
                        String arg1 = (String) in.read_value(String.class);
                        String arg2 = (String) in.read_value(String.class);
                        String arg3 = (String) in.read_value(String.class);
                        String result = target.unregister(arg0, arg1, arg2, arg3);
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value(result,String.class);
                        return out;
                    }
                case 144: 
                    if (method.equals("service__j_app_webserver_JSession__javax_servlet_http_HttpSession__javax_servlet_http_HttpServletRequest__javax_servlet_http_HttpServletResponse")) {
                        JSession arg0 = (JSession) in.read_value(JSession.class);
                        HttpSession arg1 = (HttpSession) in.read_value(HttpSession.class);
                        HttpServletRequest arg2 = (HttpServletRequest) in.read_value(HttpServletRequest.class);
                        HttpServletResponse arg3 = (HttpServletResponse) in.read_value(HttpServletResponse.class);
                        target.service(arg0, arg1, arg2, arg3);
                        OutputStream out = reply.createReply();
                        return out;
                    }
                case 145: 
                    if (method.equals("register__j_app_webserver_JSession__javax_servlet_http_HttpSession__javax_servlet_http_HttpServletRequest__javax_servlet_http_HttpServletResponse")) {
                        JSession arg0 = (JSession) in.read_value(JSession.class);
                        HttpSession arg1 = (HttpSession) in.read_value(HttpSession.class);
                        HttpServletRequest arg2 = (HttpServletRequest) in.read_value(HttpServletRequest.class);
                        HttpServletResponse arg3 = (HttpServletResponse) in.read_value(HttpServletResponse.class);
                        target.register(arg0, arg1, arg2, arg3);
                        OutputStream out = reply.createReply();
                        return out;
                    }
                case 146: 
                    if (method.equals("heartbeat__j_app_webserver_JSession__javax_servlet_http_HttpSession__javax_servlet_http_HttpServletRequest__javax_servlet_http_HttpServletResponse")) {
                        JSession arg0 = (JSession) in.read_value(JSession.class);
                        HttpSession arg1 = (HttpSession) in.read_value(HttpSession.class);
                        HttpServletRequest arg2 = (HttpServletRequest) in.read_value(HttpServletRequest.class);
                        HttpServletResponse arg3 = (HttpServletResponse) in.read_value(HttpServletResponse.class);
                        target.heartbeat(arg0, arg1, arg2, arg3);
                        OutputStream out = reply.createReply();
                        return out;
                    }
                case 147: 
                    if (method.equals("unregister__j_app_webserver_JSession__javax_servlet_http_HttpSession__javax_servlet_http_HttpServletRequest__javax_servlet_http_HttpServletResponse")) {
                        JSession arg0 = (JSession) in.read_value(JSession.class);
                        HttpSession arg1 = (HttpSession) in.read_value(HttpSession.class);
                        HttpServletRequest arg2 = (HttpServletRequest) in.read_value(HttpServletRequest.class);
                        HttpServletResponse arg3 = (HttpServletResponse) in.read_value(HttpServletResponse.class);
                        target.unregister(arg0, arg1, arg2, arg3);
                        OutputStream out = reply.createReply();
                        return out;
                    }
                case 148: 
                    if (method.equals("register__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue")) {
                        String arg0 = (String) in.read_value(String.class);
                        String arg1 = (String) in.read_value(String.class);
                        String arg2 = (String) in.read_value(String.class);
                        String arg3 = (String) in.read_value(String.class);
                        String arg4 = (String) in.read_value(String.class);
                        String arg5 = (String) in.read_value(String.class);
                        String arg6 = (String) in.read_value(String.class);
                        String result = target.register(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
                        org.omg.CORBA_2_3.portable.OutputStream out = 
                            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
                        out.write_value(result,String.class);
                        return out;
                    }
                case 163: 
                    if (method.equals("getAllServiceNodeAvailable__j_app_webserver_JSession__javax_servlet_http_HttpSession__javax_servlet_http_HttpServletRequest__javax_servlet_http_HttpServletResponse")) {
                        JSession arg0 = (JSession) in.read_value(JSession.class);
                        HttpSession arg1 = (HttpSession) in.read_value(HttpSession.class);
                        HttpServletRequest arg2 = (HttpServletRequest) in.read_value(HttpServletRequest.class);
                        HttpServletResponse arg3 = (HttpServletResponse) in.read_value(HttpServletResponse.class);
                        target.getAllServiceNodeAvailable(arg0, arg1, arg2, arg3);
                        OutputStream out = reply.createReply();
                        return out;
                    }
            }
            throw new BAD_OPERATION();
        } catch (SystemException ex) {
            throw ex;
        } catch (Throwable ex) {
            throw new UnknownException(ex);
        }
    }
    
    // This method is required as a work-around for
    // a bug in the JDK 1.1.6 verifier.
    
    private Serializable cast_array(Object obj) {
        return (Serializable)obj;
    }
}
