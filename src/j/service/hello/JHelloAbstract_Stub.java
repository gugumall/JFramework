// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package j.service.hello;

public final class JHelloAbstract_Stub
    extends java.rmi.server.RemoteStub
    implements j.service.hello.JHello, j.service.server.ServiceBase
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_auth_0;
    private static java.lang.reflect.Method $method_auth_1;
    private static java.lang.reflect.Method $method_getServiceConfig_2;
    private static java.lang.reflect.Method $method_heartbeat_3;
    private static java.lang.reflect.Method $method_heartbeat_4;
    private static java.lang.reflect.Method $method_hello_5;
    private static java.lang.reflect.Method $method_hello_6;
    private static java.lang.reflect.Method $method_init_7;
    private static java.lang.reflect.Method $method_setServiceConfig_8;
    
    static {
	try {
	    $method_auth_0 = j.service.server.ServiceBase.class.getMethod("auth", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_auth_1 = j.service.server.ServiceBase.class.getMethod("auth", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_getServiceConfig_2 = j.service.server.ServiceBase.class.getMethod("getServiceConfig", new java.lang.Class[] {});
	    $method_heartbeat_3 = j.service.server.ServiceBase.class.getMethod("heartbeat", new java.lang.Class[] {});
	    $method_heartbeat_4 = j.service.server.ServiceBase.class.getMethod("heartbeat", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_hello_5 = j.service.hello.JHello.class.getMethod("hello", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_hello_6 = j.service.hello.JHello.class.getMethod("hello", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, int.class});
	    $method_init_7 = j.service.server.ServiceBase.class.getMethod("init", new java.lang.Class[] {});
	    $method_setServiceConfig_8 = j.service.server.ServiceBase.class.getMethod("setServiceConfig", new java.lang.Class[] {j.service.server.ServiceConfig.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public JHelloAbstract_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of auth(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void auth(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_auth_0, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 4118299758828119329L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of auth(String, String, String)
    public java.lang.String auth(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_auth_1, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, -1904231725030393916L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getServiceConfig()
    public j.service.server.ServiceConfig getServiceConfig()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getServiceConfig_2, null, 2312538155149303516L);
	    return ((j.service.server.ServiceConfig) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of heartbeat()
    public java.lang.String heartbeat()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_heartbeat_3, null, -819745668268156135L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of heartbeat(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void heartbeat(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_heartbeat_4, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 2655836203206862766L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of hello(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void hello(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.lang.Exception
    {
	ref.invoke(this, $method_hello_5, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 6926424827746510748L);
    }
    
    // implementation of hello(String, String, String, int)
    public java.lang.String hello(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, int $param_int_4)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_hello_6, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, new java.lang.Integer($param_int_4)}, -3900603583533495757L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of init()
    public void init()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_init_7, null, 8836626291184730322L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setServiceConfig(ServiceConfig)
    public void setServiceConfig(j.service.server.ServiceConfig $param_ServiceConfig_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setServiceConfig_8, new java.lang.Object[] {$param_ServiceConfig_1}, 3420343923450810890L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
