// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package j.cache;

public final class JDCacheServiceAbstract_Stub
    extends java.rmi.server.RemoteStub
    implements j.cache.JDCacheService, j.service.server.ServiceBase
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_addAll_0;
    private static java.lang.reflect.Method $method_addAll_1;
    private static java.lang.reflect.Method $method_addAll_2;
    private static java.lang.reflect.Method $method_addOne_3;
    private static java.lang.reflect.Method $method_addOne_4;
    private static java.lang.reflect.Method $method_addOne_5;
    private static java.lang.reflect.Method $method_addOneIfNotContains_6;
    private static java.lang.reflect.Method $method_addOneIfNotContains_7;
    private static java.lang.reflect.Method $method_auth_8;
    private static java.lang.reflect.Method $method_auth_9;
    private static java.lang.reflect.Method $method_clear_10;
    private static java.lang.reflect.Method $method_clear_11;
    private static java.lang.reflect.Method $method_contains_12;
    private static java.lang.reflect.Method $method_contains_13;
    private static java.lang.reflect.Method $method_createUnit_14;
    private static java.lang.reflect.Method $method_createUnit_15;
    private static java.lang.reflect.Method $method_get_16;
    private static java.lang.reflect.Method $method_get_17;
    private static java.lang.reflect.Method $method_getServiceConfig_18;
    private static java.lang.reflect.Method $method_heartbeat_19;
    private static java.lang.reflect.Method $method_heartbeat_20;
    private static java.lang.reflect.Method $method_init_21;
    private static java.lang.reflect.Method $method_keys_22;
    private static java.lang.reflect.Method $method_keys_23;
    private static java.lang.reflect.Method $method_remove_24;
    private static java.lang.reflect.Method $method_remove_25;
    private static java.lang.reflect.Method $method_setActiveTime_26;
    private static java.lang.reflect.Method $method_setActiveTime_27;
    private static java.lang.reflect.Method $method_setServiceConfig_28;
    private static java.lang.reflect.Method $method_size_29;
    private static java.lang.reflect.Method $method_size_30;
    private static java.lang.reflect.Method $method_size_31;
    private static java.lang.reflect.Method $method_sub_32;
    private static java.lang.reflect.Method $method_sub_33;
    private static java.lang.reflect.Method $method_update_34;
    private static java.lang.reflect.Method $method_update_35;
    private static java.lang.reflect.Method $method_updateCollection_36;
    private static java.lang.reflect.Method $method_updateCollection_37;
    private static java.lang.reflect.Method $method_values_38;
    private static java.lang.reflect.Method $method_values_39;
    
    static {
	try {
	    $method_addAll_0 = j.cache.JDCacheService.class.getMethod("addAll", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_addAll_1 = j.cache.JDCacheService.class.getMethod("addAll", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, java.util.Collection.class});
	    $method_addAll_2 = j.cache.JDCacheService.class.getMethod("addAll", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, java.util.Map.class});
	    $method_addOne_3 = j.cache.JDCacheService.class.getMethod("addOne", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_addOne_4 = j.cache.JDCacheService.class.getMethod("addOne", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class});
	    $method_addOne_5 = j.cache.JDCacheService.class.getMethod("addOne", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class});
	    $method_addOneIfNotContains_6 = j.cache.JDCacheService.class.getMethod("addOneIfNotContains", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_addOneIfNotContains_7 = j.cache.JDCacheService.class.getMethod("addOneIfNotContains", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class});
	    $method_auth_8 = j.service.server.ServiceBase.class.getMethod("auth", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_auth_9 = j.service.server.ServiceBase.class.getMethod("auth", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_clear_10 = j.cache.JDCacheService.class.getMethod("clear", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_clear_11 = j.cache.JDCacheService.class.getMethod("clear", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_contains_12 = j.cache.JDCacheService.class.getMethod("contains", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_contains_13 = j.cache.JDCacheService.class.getMethod("contains", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, j.cache.JCacheParams.class});
	    $method_createUnit_14 = j.cache.JDCacheService.class.getMethod("createUnit", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_createUnit_15 = j.cache.JDCacheService.class.getMethod("createUnit", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, int.class, int.class});
	    $method_get_16 = j.cache.JDCacheService.class.getMethod("get", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_get_17 = j.cache.JDCacheService.class.getMethod("get", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, j.cache.JCacheParams.class});
	    $method_getServiceConfig_18 = j.service.server.ServiceBase.class.getMethod("getServiceConfig", new java.lang.Class[] {});
	    $method_heartbeat_19 = j.service.server.ServiceBase.class.getMethod("heartbeat", new java.lang.Class[] {});
	    $method_heartbeat_20 = j.service.server.ServiceBase.class.getMethod("heartbeat", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_init_21 = j.service.server.ServiceBase.class.getMethod("init", new java.lang.Class[] {});
	    $method_keys_22 = j.cache.JDCacheService.class.getMethod("keys", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_keys_23 = j.cache.JDCacheService.class.getMethod("keys", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, j.cache.JCacheParams.class});
	    $method_remove_24 = j.cache.JDCacheService.class.getMethod("remove", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_remove_25 = j.cache.JDCacheService.class.getMethod("remove", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, j.cache.JCacheParams.class});
	    $method_setActiveTime_26 = j.cache.JDCacheService.class.getMethod("setActiveTime", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_setActiveTime_27 = j.cache.JDCacheService.class.getMethod("setActiveTime", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_setServiceConfig_28 = j.service.server.ServiceBase.class.getMethod("setServiceConfig", new java.lang.Class[] {j.service.server.ServiceConfig.class});
	    $method_size_29 = j.cache.JDCacheService.class.getMethod("size", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_size_30 = j.cache.JDCacheService.class.getMethod("size", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_size_31 = j.cache.JDCacheService.class.getMethod("size", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, j.cache.JCacheParams.class});
	    $method_sub_32 = j.cache.JDCacheService.class.getMethod("sub", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_sub_33 = j.cache.JDCacheService.class.getMethod("sub", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, j.cache.JCacheParams.class});
	    $method_update_34 = j.cache.JDCacheService.class.getMethod("update", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_update_35 = j.cache.JDCacheService.class.getMethod("update", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, j.cache.JCacheParams.class});
	    $method_updateCollection_36 = j.cache.JDCacheService.class.getMethod("updateCollection", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_updateCollection_37 = j.cache.JDCacheService.class.getMethod("updateCollection", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, j.cache.JCacheParams.class});
	    $method_values_38 = j.cache.JDCacheService.class.getMethod("values", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_values_39 = j.cache.JDCacheService.class.getMethod("values", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, j.cache.JCacheParams.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public JDCacheServiceAbstract_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of addAll(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void addAll(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_addAll_0, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 8758560456057928587L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of addAll(String, String, String, Collection)
    public void addAll(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, java.util.Collection $param_Collection_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_addAll_1, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_Collection_4}, -5022688481066860842L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of addAll(String, String, String, Map)
    public void addAll(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, java.util.Map $param_Map_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_addAll_2, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_Map_4}, 3125207590946388589L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of addOne(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void addOne(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_addOne_3, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, -6770431615596768025L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of addOne(String, String, String, Object)
    public void addOne(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, java.lang.Object $param_Object_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_addOne_4, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_Object_4}, 8137981188906223848L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of addOne(String, String, String, Object, Object)
    public void addOne(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, java.lang.Object $param_Object_4, java.lang.Object $param_Object_5)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_addOne_5, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_Object_4, $param_Object_5}, -1722953507049470831L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of addOneIfNotContains(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void addOneIfNotContains(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_addOneIfNotContains_6, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 1142218327815640813L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of addOneIfNotContains(String, String, String, Object)
    public void addOneIfNotContains(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, java.lang.Object $param_Object_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_addOneIfNotContains_7, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_Object_4}, -4349897404966930860L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of auth(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void auth(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_auth_8, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 4118299758828119329L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of auth(String, String, String)
    public java.lang.String auth(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_auth_9, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, -1904231725030393916L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of clear(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void clear(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_clear_10, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 4227675813908564201L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of clear(String, String, String)
    public void clear(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_clear_11, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, 1497600615318603132L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of contains(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void contains(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_contains_12, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 4979470473512773521L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of contains(String, String, String, JCacheParams)
    public boolean contains(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, j.cache.JCacheParams $param_JCacheParams_4)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_contains_13, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_JCacheParams_4}, 8888748833328295258L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of createUnit(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void createUnit(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_createUnit_14, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 8800512398995571582L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of createUnit(String, String, String, int, int)
    public void createUnit(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, int $param_int_4, int $param_int_5)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_createUnit_15, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, new java.lang.Integer($param_int_4), new java.lang.Integer($param_int_5)}, -5277450156474751594L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of get(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void get(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_get_16, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, -6888496814306902422L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of get(String, String, String, JCacheParams)
    public java.lang.Object get(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, j.cache.JCacheParams $param_JCacheParams_4)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_get_17, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_JCacheParams_4}, 755896339991099218L);
	    return ((java.lang.Object) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getServiceConfig()
    public j.service.server.ServiceConfig getServiceConfig()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getServiceConfig_18, null, 2312538155149303516L);
	    return ((j.service.server.ServiceConfig) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of heartbeat()
    public java.lang.String heartbeat()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_heartbeat_19, null, -819745668268156135L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of heartbeat(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void heartbeat(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_heartbeat_20, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 2655836203206862766L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of init()
    public void init()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_init_21, null, 8836626291184730322L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of keys(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void keys(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_keys_22, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 2061494770873738965L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of keys(String, String, String, JCacheParams)
    public j.util.ConcurrentList keys(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, j.cache.JCacheParams $param_JCacheParams_4)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_keys_23, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_JCacheParams_4}, 5880167373452676601L);
	    return ((j.util.ConcurrentList) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of remove(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void remove(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_remove_24, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, -7984523423432294900L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of remove(String, String, String, JCacheParams)
    public void remove(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, j.cache.JCacheParams $param_JCacheParams_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_remove_25, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_JCacheParams_4}, -4799117966253485800L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setActiveTime(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void setActiveTime(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setActiveTime_26, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 6102554734829143252L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setActiveTime(String, String, String)
    public void setActiveTime(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setActiveTime_27, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, 5894651717408209913L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setServiceConfig(ServiceConfig)
    public void setServiceConfig(j.service.server.ServiceConfig $param_ServiceConfig_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setServiceConfig_28, new java.lang.Object[] {$param_ServiceConfig_1}, 3420343923450810890L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of size(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void size(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_size_29, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, -3592315760696488596L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of size(String, String, String)
    public int size(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_size_30, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, 6289203834426963621L);
	    return ((java.lang.Integer) $result).intValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of size(String, String, String, JCacheParams)
    public int size(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, j.cache.JCacheParams $param_JCacheParams_4)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_size_31, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_JCacheParams_4}, 3788378536362486641L);
	    return ((java.lang.Integer) $result).intValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of sub(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void sub(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_sub_32, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 4214638332959137524L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of sub(String, String, String, JCacheParams)
    public java.lang.Object sub(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, j.cache.JCacheParams $param_JCacheParams_4)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_sub_33, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_JCacheParams_4}, 4118576392121554432L);
	    return ((java.lang.Object) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of update(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void update(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_update_34, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 6932960392032490633L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of update(String, String, String, JCacheParams)
    public void update(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, j.cache.JCacheParams $param_JCacheParams_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_update_35, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_JCacheParams_4}, -2607978534295183688L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of updateCollection(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void updateCollection(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_updateCollection_36, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, -3075898432739521854L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of updateCollection(String, String, String, JCacheParams)
    public void updateCollection(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, j.cache.JCacheParams $param_JCacheParams_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_updateCollection_37, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_JCacheParams_4}, -3688867267471559803L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of values(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void values(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_values_38, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, -5909914721799603460L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of values(String, String, String, JCacheParams)
    public j.util.ConcurrentList values(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, j.cache.JCacheParams $param_JCacheParams_4)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_values_39, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_JCacheParams_4}, -7131545643001403397L);
	    return ((j.util.ConcurrentList) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
