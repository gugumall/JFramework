// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package j.security;

public final class VerifyCodeServiceAbstract_Stub
    extends java.rmi.server.RemoteStub
    implements j.security.VerifyCodeService, j.service.server.ServiceBase
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_auth_0;
    private static java.lang.reflect.Method $method_auth_1;
    private static java.lang.reflect.Method $method_c_2;
    private static java.lang.reflect.Method $method_c_3;
    private static java.lang.reflect.Method $method_exists_4;
    private static java.lang.reflect.Method $method_exists_5;
    private static java.lang.reflect.Method $method_g_6;
    private static java.lang.reflect.Method $method_g_7;
    private static java.lang.reflect.Method $method_getServiceConfig_8;
    private static java.lang.reflect.Method $method_heartbeat_9;
    private static java.lang.reflect.Method $method_heartbeat_10;
    private static java.lang.reflect.Method $method_init_11;
    private static java.lang.reflect.Method $method_remove_12;
    private static java.lang.reflect.Method $method_remove_13;
    private static java.lang.reflect.Method $method_setServiceConfig_14;
    
    static {
	try {
	    $method_auth_0 = j.service.server.ServiceBase.class.getMethod("auth", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_auth_1 = j.service.server.ServiceBase.class.getMethod("auth", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_c_2 = j.security.VerifyCodeService.class.getMethod("c", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_c_3 = j.security.VerifyCodeService.class.getMethod("c", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_exists_4 = j.security.VerifyCodeService.class.getMethod("exists", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_exists_5 = j.security.VerifyCodeService.class.getMethod("exists", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_g_6 = j.security.VerifyCodeService.class.getMethod("g", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_g_7 = j.security.VerifyCodeService.class.getMethod("g", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, int.class, int.class, long.class});
	    $method_getServiceConfig_8 = j.service.server.ServiceBase.class.getMethod("getServiceConfig", new java.lang.Class[] {});
	    $method_heartbeat_9 = j.service.server.ServiceBase.class.getMethod("heartbeat", new java.lang.Class[] {});
	    $method_heartbeat_10 = j.service.server.ServiceBase.class.getMethod("heartbeat", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_init_11 = j.service.server.ServiceBase.class.getMethod("init", new java.lang.Class[] {});
	    $method_remove_12 = j.security.VerifyCodeService.class.getMethod("remove", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_remove_13 = j.security.VerifyCodeService.class.getMethod("remove", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_setServiceConfig_14 = j.service.server.ServiceBase.class.getMethod("setServiceConfig", new java.lang.Class[] {j.service.server.ServiceConfig.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public VerifyCodeServiceAbstract_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of auth(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void auth(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_auth_0, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 4118299758828119329L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of auth(String, String, String)
    public java.lang.String auth(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_auth_1, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, -1904231725030393916L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of c(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void c(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_c_2, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, -8499315785634395143L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of c(String, String, String, String, String)
    public java.lang.String c(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, java.lang.String $param_String_4, java.lang.String $param_String_5)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_c_3, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_String_4, $param_String_5}, 709028847165174635L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of exists(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void exists(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_exists_4, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 6398891095168081036L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of exists(String, String, String, String)
    public j.security.VerifyCodeBean exists(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, java.lang.String $param_String_4)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_exists_5, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_String_4}, -5661649733608914715L);
	    return ((j.security.VerifyCodeBean) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of g(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void g(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_g_6, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, -8620401713146256997L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of g(String, String, String, String, int, int, long)
    public java.lang.String g(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, java.lang.String $param_String_4, int $param_int_5, int $param_int_6, long $param_long_7)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_g_7, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_String_4, new java.lang.Integer($param_int_5), new java.lang.Integer($param_int_6), new java.lang.Long($param_long_7)}, -7864912025331650277L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getServiceConfig()
    public j.service.server.ServiceConfig getServiceConfig()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getServiceConfig_8, null, 2312538155149303516L);
	    return ((j.service.server.ServiceConfig) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of heartbeat()
    public java.lang.String heartbeat()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_heartbeat_9, null, -819745668268156135L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of heartbeat(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void heartbeat(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_heartbeat_10, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 2655836203206862766L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of init()
    public void init()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_init_11, null, 8836626291184730322L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of remove(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void remove(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_remove_12, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, -7984523423432294900L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of remove(String, String, String, String)
    public void remove(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, java.lang.String $param_String_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_remove_13, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_String_4}, 5525639776221570715L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setServiceConfig(ServiceConfig)
    public void setServiceConfig(j.service.server.ServiceConfig $param_ServiceConfig_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setServiceConfig_14, new java.lang.Object[] {$param_ServiceConfig_1}, 3420343923450810890L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
