// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package j.fs;

public final class JDFSServiceAbstract_Stub
    extends java.rmi.server.RemoteStub
    implements j.fs.JDFSService, j.service.server.ServiceBase
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method__new_0;
    private static java.lang.reflect.Method $method__new_1;
    private static java.lang.reflect.Method $method_auth_2;
    private static java.lang.reflect.Method $method_auth_3;
    private static java.lang.reflect.Method $method_bytes_4;
    private static java.lang.reflect.Method $method_bytes_5;
    private static java.lang.reflect.Method $method_delete_6;
    private static java.lang.reflect.Method $method_delete_7;
    private static java.lang.reflect.Method $method_getServiceConfig_8;
    private static java.lang.reflect.Method $method_heartbeat_9;
    private static java.lang.reflect.Method $method_heartbeat_10;
    private static java.lang.reflect.Method $method_init_11;
    private static java.lang.reflect.Method $method_list_12;
    private static java.lang.reflect.Method $method_list_13;
    private static java.lang.reflect.Method $method_mkdir_14;
    private static java.lang.reflect.Method $method_mkdir_15;
    private static java.lang.reflect.Method $method_mkdirs_16;
    private static java.lang.reflect.Method $method_mkdirs_17;
    private static java.lang.reflect.Method $method_renameTo_18;
    private static java.lang.reflect.Method $method_renameTo_19;
    private static java.lang.reflect.Method $method_saveBytes_20;
    private static java.lang.reflect.Method $method_saveBytes_21;
    private static java.lang.reflect.Method $method_saveFile_22;
    private static java.lang.reflect.Method $method_saveString_23;
    private static java.lang.reflect.Method $method_saveString_24;
    private static java.lang.reflect.Method $method_setExecutable_25;
    private static java.lang.reflect.Method $method_setExecutable_26;
    private static java.lang.reflect.Method $method_setLastModified_27;
    private static java.lang.reflect.Method $method_setLastModified_28;
    private static java.lang.reflect.Method $method_setReadOnly_29;
    private static java.lang.reflect.Method $method_setReadOnly_30;
    private static java.lang.reflect.Method $method_setReadable_31;
    private static java.lang.reflect.Method $method_setReadable_32;
    private static java.lang.reflect.Method $method_setServiceConfig_33;
    private static java.lang.reflect.Method $method_setWritable_34;
    private static java.lang.reflect.Method $method_setWritable_35;
    private static java.lang.reflect.Method $method_string_36;
    private static java.lang.reflect.Method $method_string_37;
    
    static {
	try {
	    $method__new_0 = j.fs.JDFSService.class.getMethod("_new", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method__new_1 = j.fs.JDFSService.class.getMethod("_new", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_auth_2 = j.service.server.ServiceBase.class.getMethod("auth", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_auth_3 = j.service.server.ServiceBase.class.getMethod("auth", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_bytes_4 = j.fs.JDFSService.class.getMethod("bytes", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_bytes_5 = j.fs.JDFSService.class.getMethod("bytes", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_delete_6 = j.fs.JDFSService.class.getMethod("delete", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_delete_7 = j.fs.JDFSService.class.getMethod("delete", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_getServiceConfig_8 = j.service.server.ServiceBase.class.getMethod("getServiceConfig", new java.lang.Class[] {});
	    $method_heartbeat_9 = j.service.server.ServiceBase.class.getMethod("heartbeat", new java.lang.Class[] {});
	    $method_heartbeat_10 = j.service.server.ServiceBase.class.getMethod("heartbeat", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_init_11 = j.service.server.ServiceBase.class.getMethod("init", new java.lang.Class[] {});
	    $method_list_12 = j.fs.JDFSService.class.getMethod("list", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_list_13 = j.fs.JDFSService.class.getMethod("list", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_mkdir_14 = j.fs.JDFSService.class.getMethod("mkdir", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_mkdir_15 = j.fs.JDFSService.class.getMethod("mkdir", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_mkdirs_16 = j.fs.JDFSService.class.getMethod("mkdirs", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_mkdirs_17 = j.fs.JDFSService.class.getMethod("mkdirs", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_renameTo_18 = j.fs.JDFSService.class.getMethod("renameTo", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_renameTo_19 = j.fs.JDFSService.class.getMethod("renameTo", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_saveBytes_20 = j.fs.JDFSService.class.getMethod("saveBytes", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_saveBytes_21 = j.fs.JDFSService.class.getMethod("saveBytes", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, byte[].class});
	    $method_saveFile_22 = j.fs.JDFSService.class.getMethod("saveFile", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_saveString_23 = j.fs.JDFSService.class.getMethod("saveString", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_saveString_24 = j.fs.JDFSService.class.getMethod("saveString", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, boolean.class, java.lang.String.class});
	    $method_setExecutable_25 = j.fs.JDFSService.class.getMethod("setExecutable", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_setExecutable_26 = j.fs.JDFSService.class.getMethod("setExecutable", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, boolean.class, boolean.class});
	    $method_setLastModified_27 = j.fs.JDFSService.class.getMethod("setLastModified", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_setLastModified_28 = j.fs.JDFSService.class.getMethod("setLastModified", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, long.class});
	    $method_setReadOnly_29 = j.fs.JDFSService.class.getMethod("setReadOnly", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_setReadOnly_30 = j.fs.JDFSService.class.getMethod("setReadOnly", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class});
	    $method_setReadable_31 = j.fs.JDFSService.class.getMethod("setReadable", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_setReadable_32 = j.fs.JDFSService.class.getMethod("setReadable", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, boolean.class, boolean.class});
	    $method_setServiceConfig_33 = j.service.server.ServiceBase.class.getMethod("setServiceConfig", new java.lang.Class[] {j.service.server.ServiceConfig.class});
	    $method_setWritable_34 = j.fs.JDFSService.class.getMethod("setWritable", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_setWritable_35 = j.fs.JDFSService.class.getMethod("setWritable", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, boolean.class, boolean.class});
	    $method_string_36 = j.fs.JDFSService.class.getMethod("string", new java.lang.Class[] {j.app.webserver.JSession.class, javax.servlet.http.HttpSession.class, javax.servlet.http.HttpServletRequest.class, javax.servlet.http.HttpServletResponse.class});
	    $method_string_37 = j.fs.JDFSService.class.getMethod("string", new java.lang.Class[] {java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public JDFSServiceAbstract_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of _new(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void _new(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method__new_0, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, -7088313382277625854L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of _new(String, String, String)
    public j.fs.JFileMeta _new(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method__new_1, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, 8516779252533331659L);
	    return ((j.fs.JFileMeta) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of auth(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void auth(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_auth_2, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 4118299758828119329L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of auth(String, String, String)
    public java.lang.String auth(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_auth_3, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, -1904231725030393916L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of bytes(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void bytes(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_bytes_4, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, -831017745681941674L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of bytes(String, String, String)
    public byte[] bytes(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_bytes_5, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, 7726196696915643505L);
	    return ((byte[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of delete(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void delete(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_delete_6, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 8919401537573623576L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of delete(String, String, String)
    public boolean delete(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_delete_7, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, -3380057625747690974L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getServiceConfig()
    public j.service.server.ServiceConfig getServiceConfig()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getServiceConfig_8, null, 2312538155149303516L);
	    return ((j.service.server.ServiceConfig) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of heartbeat()
    public java.lang.String heartbeat()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_heartbeat_9, null, -819745668268156135L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of heartbeat(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void heartbeat(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_heartbeat_10, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 2655836203206862766L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of init()
    public void init()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_init_11, null, 8836626291184730322L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of list(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void list(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_list_12, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, -4979399870709413502L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of list(String, String, String)
    public java.lang.String[] list(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_list_13, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, -5425600969577468635L);
	    return ((java.lang.String[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of mkdir(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void mkdir(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_mkdir_14, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, -7708874184452442084L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of mkdir(String, String, String)
    public boolean mkdir(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_mkdir_15, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, -1394002297490499066L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of mkdirs(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void mkdirs(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_mkdirs_16, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, -3561114749186377846L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of mkdirs(String, String, String)
    public boolean mkdirs(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_mkdirs_17, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, 6231833087030621701L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of renameTo(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void renameTo(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_renameTo_18, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, -381346593118819987L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of renameTo(String, String, String, String)
    public boolean renameTo(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, java.lang.String $param_String_4)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_renameTo_19, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_String_4}, -6886646015063408745L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of saveBytes(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void saveBytes(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_saveBytes_20, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, -2993532743037664263L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of saveBytes(String, String, String, byte[])
    public void saveBytes(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, byte[] $param_arrayOf_byte_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_saveBytes_21, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_arrayOf_byte_4}, -7878661838250526633L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of saveFile(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void saveFile(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_saveFile_22, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 6958090573154957185L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of saveString(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void saveString(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_saveString_23, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 4679696524512317996L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of saveString(String, String, String, String, boolean, String)
    public void saveString(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, java.lang.String $param_String_4, boolean $param_boolean_5, java.lang.String $param_String_6)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_saveString_24, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_String_4, ($param_boolean_5 ? java.lang.Boolean.TRUE : java.lang.Boolean.FALSE), $param_String_6}, 7539057096169419134L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setExecutable(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void setExecutable(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setExecutable_25, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, -4657844618654367852L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setExecutable(String, String, String, boolean, boolean)
    public boolean setExecutable(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, boolean $param_boolean_4, boolean $param_boolean_5)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_setExecutable_26, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, ($param_boolean_4 ? java.lang.Boolean.TRUE : java.lang.Boolean.FALSE), ($param_boolean_5 ? java.lang.Boolean.TRUE : java.lang.Boolean.FALSE)}, 5295272528922672662L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setLastModified(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void setLastModified(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setLastModified_27, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, -5314912765884497503L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setLastModified(String, String, String, long)
    public boolean setLastModified(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, long $param_long_4)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_setLastModified_28, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, new java.lang.Long($param_long_4)}, -1980611132014328286L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setReadOnly(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void setReadOnly(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setReadOnly_29, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 3051087787791404454L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setReadOnly(String, String, String)
    public boolean setReadOnly(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_setReadOnly_30, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3}, 1929567496969151619L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setReadable(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void setReadable(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setReadable_31, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 4416487676342690158L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setReadable(String, String, String, boolean, boolean)
    public boolean setReadable(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, boolean $param_boolean_4, boolean $param_boolean_5)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_setReadable_32, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, ($param_boolean_4 ? java.lang.Boolean.TRUE : java.lang.Boolean.FALSE), ($param_boolean_5 ? java.lang.Boolean.TRUE : java.lang.Boolean.FALSE)}, 5482586284759561606L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setServiceConfig(ServiceConfig)
    public void setServiceConfig(j.service.server.ServiceConfig $param_ServiceConfig_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setServiceConfig_33, new java.lang.Object[] {$param_ServiceConfig_1}, 3420343923450810890L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setWritable(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void setWritable(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setWritable_34, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, 4532996357398709652L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setWritable(String, String, String, boolean, boolean)
    public boolean setWritable(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, boolean $param_boolean_4, boolean $param_boolean_5)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_setWritable_35, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, ($param_boolean_4 ? java.lang.Boolean.TRUE : java.lang.Boolean.FALSE), ($param_boolean_5 ? java.lang.Boolean.TRUE : java.lang.Boolean.FALSE)}, -3919629570632386033L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of string(JSession, HttpSession, HttpServletRequest, HttpServletResponse)
    public void string(j.app.webserver.JSession $param_JSession_1, javax.servlet.http.HttpSession $param_HttpSession_2, javax.servlet.http.HttpServletRequest $param_HttpServletRequest_3, javax.servlet.http.HttpServletResponse $param_HttpServletResponse_4)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_string_36, new java.lang.Object[] {$param_JSession_1, $param_HttpSession_2, $param_HttpServletRequest_3, $param_HttpServletResponse_4}, -6645102571115260157L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of string(String, String, String, String)
    public java.lang.String string(java.lang.String $param_String_1, java.lang.String $param_String_2, java.lang.String $param_String_3, java.lang.String $param_String_4)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_string_37, new java.lang.Object[] {$param_String_1, $param_String_2, $param_String_3, $param_String_4}, 8664726371450098049L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
